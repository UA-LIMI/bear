---
description: Research-driven development workflow patterns for comprehensive knowledge gathering and implementation
globs: **/*
alwaysApply: true
---

- **Research-First Development Approach:**
  - **Always research before implementing** complex integrations or new technologies
  - **Use AI research tools** (Perplexity, etc.) to gather current best practices and official documentation
  - **Create comprehensive knowledge bases** before starting implementation
  - **Document findings in organized research files** for future reference
  - **Example**: Research OpenAI APIs, authentication patterns, SDK usage before coding

- **Research Documentation Standards:**
  - **Store research in dedicated directories** (e.g., `.taskmaster/docs/research/`)
  - **Create consolidated implementation guides** from multiple research sources
  - **Provide exact technical specifications** with API endpoints, formats, and examples
  - **Include troubleshooting guides** and error handling patterns
  - **Link research to implementation tasks** for easy reference

- **Knowledge Base Organization:**
  - **Primary Guide**: Consolidated technical specifications and patterns
  - **Code Templates**: Research-backed implementation templates with references
  - **Quick Reference**: Error codes, decision trees, and troubleshooting
  - **Source Documentation**: Detailed research from official sources
  - **Master Index**: README that guides users to appropriate documentation

- **Research Integration Patterns:**
  - **Link code to research** via comments referencing specific documentation sections
  - **Include research references in error messages** for troubleshooting guidance
  - **Create debug information** that guides to relevant research documentation
  - **Map error codes to research sections** for quick problem resolution
  - **Provide AI guidance** on when to check research vs when to get new information

- **Research Update Triggers:**
  - **API responses don't match research** - indicates documentation may be outdated
  - **Encountering undocumented error patterns** - need additional research
  - **New features or capabilities discovered** - expand research coverage
  - **Performance issues not covered in research** - investigate optimization patterns
  - **Security concerns not addressed** - research current security best practices

- **AI Assistant Research Guidelines:**
  - **Check research files first** before making implementation decisions
  - **Reference specific research sections** when providing implementation guidance
  - **Update research when patterns are insufficient** rather than making assumptions
  - **Guide users to research documentation** for complex technical decisions
  - **Validate implementation against research findings** before considering complete