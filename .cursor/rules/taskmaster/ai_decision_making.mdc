---
description: AI assistant decision-making patterns and workflow optimization for effective development
globs: **/*
alwaysApply: true
---

- **Research-Driven Decision Making:**
  - **Research before implementing** any complex or unfamiliar technology
  - **Use current AI research tools** (Perplexity, etc.) to get up-to-date information
  - **Validate against official documentation** rather than making assumptions
  - **Create knowledge bases** for complex integrations that can be referenced later
  - **Update research** when encountering patterns not covered in existing documentation

- **Implementation Strategy:**
  - **Start with existing solutions** and enhance rather than build from scratch
  - **Use established libraries** and frameworks over custom implementations
  - **Follow industry standards** and best practices discovered through research
  - **Implement incrementally** with testing at each step
  - **Document implementation patterns** for future reference

- **Task Management Integration:**
  - **Use Task Master actively** for organizing and tracking development work
  - **Break down complex tasks** into specific, actionable subtasks
  - **Research comprehensively** before starting implementation tasks
  - **Update tasks with findings** and lessons learned during implementation
  - **Link research to specific tasks** for easy reference during coding

- **Error Handling and Debugging:**
  - **Create research-linked error codes** that guide to relevant documentation
  - **Implement comprehensive error handling** with specific troubleshooting guidance
  - **Log errors with research references** to guide future debugging
  - **Build error recovery patterns** based on research findings
  - **Test error scenarios thoroughly** to validate handling approaches

- **User Interaction Patterns:**
  - **Question complexity** when solutions seem over-engineered
  - **Validate necessity** of new functionality before implementing
  - **Present options** rather than assuming the best approach
  - **Respond positively** to user questioning and feedback
  - **Adjust implementation** based on user preferences and requirements

- **Knowledge Management:**
  - **Document patterns and decisions** for future AI assistants
  - **Create reusable templates** and implementation guides
  - **Maintain research documentation** that persists across sessions
  - **Build comprehensive reference systems** for complex technologies
  - **Update rules and patterns** based on successful implementations

- **Quality Assurance:**
  - **Test implementations thoroughly** with comprehensive test suites
  - **Validate against research specifications** to ensure correctness
  - **Create both positive and negative test cases** for robust validation
  - **Document test results** and maintain quality metrics
  - **Implement monitoring and observability** for production systems

- **Continuous Improvement:**
  - **Learn from user feedback** and adjust approaches accordingly
  - **Update implementation patterns** based on successful outcomes
  - **Refine research methods** to be more effective and comprehensive
  - **Improve task breakdown strategies** for better project management
  - **Enhance collaboration patterns** based on user preferences